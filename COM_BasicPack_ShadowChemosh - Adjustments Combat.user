<?xml version="1.0" encoding="UTF-8"?>
<document signature="Hero Lab Data">
  <loadonce key="COM_BasicPack_ShadowChemosh - Adjustments Combat"/>
  <fileinfo>
    <info_author><![CDATA[
      Author:  Tim Shadow
      Email: shadowchemosh@yahoo.com
      ]]></info_author>
    <info_history><![CDATA[
    ]]></info_history>
    </fileinfo>
  <thing id="pstS2NonL2" name="Deal Nonlethal Dmg (-4H)" description="Certain attacks deal nonlethal damage. Other effects, such as heat or being exhausted, also deal nonlethal damage. When you take nonlethal damage, keep a running total of how much you&apos;ve accumulated. Do not deduct the nonlethal damage number from your current hit points. It is not &quot;real&quot; damage. Instead, when your nonlethal damage equals your current hit points, you&apos;re staggered (see below), and when it exceeds your current hit points, you fall unconscious.\n\n{b}Nonlethal Damage with a Weapon that Deals Lethal Damage{/b}\nYou can use a melee weapon that deals lethal damage to deal nonlethal damage instead, but you take a –4 penalty on your attack roll.\n\n{b}Lethal Damage with a Weapon that Deals Nonlethal Damage{/b}\nYou can use a weapon that deals nonlethal damage, including an unarmed strike, to deal lethal damage instead, but you take a –4 penalty on your attack roll." compset="ComState">
    <fieldval field="abValue" value="-4"/>
    <usesource source="srcS2Adjus"/>
    <tag group="Helper" tag="CoreCampOK"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <eval phase="PreLevel" priority="10000"><![CDATA[
      ~ If we're not enabled, get out now
      doneif (field[pIsOn].value = 0)

      ~ give a penalty to all weapons
      hero.child[Attack].field[tAtkMelee].value += field[abValue].value

      ~ All weapons on the hero
      foreach pick in hero from BaseWep where "!wSpecial.Nonlethal & wCategory.Melee"
         ~ Now are non-lethal weapon
         perform eachpick.assign[wSpecial.Nonlethal]
      nexteach]]></eval>
    </thing>
  <thing id="pS2UnderWa" name="Swimming/Underwater" description="{B}Hold Breath: {/b} Any character can hold her breath for a number of rounds equal to twice her Constitution score.  While in combat this drops to a number of rounds equal to your Constituion score. After this period of time, the character must make a DC 10 Constitution check every round in order to continue holding her breath. Each round, the DC increases by 1.\n\n{b}Ranged Attacks Underwater:{/b} Thrown weapons are ineffective underwater, even when launched from land. Attacks with other ranged weapons take a -2 penalty on attack rolls for every 5 feet of water they pass through, in addition to the normal penalties for range.\n\n{b}Attacks from Land:{/b} Characters swimming, floating, or treading water on the surface, or wading in water at least chest deep, have improved cover (+8 bonus to AC, +4 bonus on Reflex saves) from opponents on land. Land-bound opponents who have freedom of movement effects ignore this cover when making melee attacks against targets in the water. A completely submerged creature has total cover against opponents on land unless those opponents have freedom of movement effects. Magical effects are unaffected except for those that require attack rolls (which are treated like any other effects) and fire effects.\n\n{b}Fire:{/b} Nonmagical fire (including alchemist&apos;s fire) does not burn underwater. Spells or spell-like effects with the fire descriptor are ineffective underwater unless the caster makes a caster level check (DC 20 + spell level). If the check succeeds, the spell creates a bubble of steam instead of its usual fiery effect, but otherwise the spell works as described. A supernatural fire effect is ineffective underwater unless its description states otherwise. The surface of a body of water blocks line of effect for any fire spell. If the caster has made the caster level check to make the fire spell usable underwater, the surface still blocks the spell&apos;s line of effect.\n\n{b}Spellcasting Underwater:{/b} Casting spells while submerged can be difficult for those who cannot breathe underwater. A creature that cannot breathe water must make a concentration check (DC 15 + spell level) to cast a spell underwater (this is in addition to the caster level check to successfully cast a fire spell underwater). Creatures that can breathe water are unaffected and can cast spells normally. Some spells might function differently underwater, subject to GM discretion." compset="InPlay">
    <fieldval field="abValue" value="-2"/>
    <usesource source="srcS2Adjus"/>
    <tag group="Helper" tag="CoreCampOK"/>
    <tag group="Helper" tag="AdjState"/>
    <eval phase="PreLevel" priority="20000"><![CDATA[
      ~ If not on then get out now
      doneif (field[pIsOn].value = 0)
      ~ Set half-dmg message
      var sText as String
      sText = "*.5 (half dmg)"

      ~ Remove all shields as you can't swim with them
      Call S2RmvShld

      ~ Find all slashing/bludgening, Ranged weapons
      foreach pick in hero from BaseWep where "wType.S|wType.B|wCategory.RangeProj|wCategory.RangeThrow & !thingid.wRay"
         ~ If we are thrown set range to zero
         If (eachpick.tagis[wCategory.RangeThrow] <> 0) Then
            perform eachpick.delete[wRangeInc.?]
            eachpick.field[wAttRanged].value = 0
            #situational[eachpick,"Thrown weapons can not be thrown underwater.",field[name].text]
         Endif
         ~ If a projectile weapon set range increment to 5 and give ranged penalty
         If (eachpick.tagis[wCategory.RangeProj] <> 0) Then
            perform eachpick.delete[wRangeInc.?]
            perform eachpick.assign[wRangeInc.5]
            eachpick.field[wAttBonus].value += field[abValue].value
            #situational[eachpick,"Projectile weapons have a range increment of 5ft underwater.",field[name].text]
         Endif
         ~ Give a penalty to attack rolls unless we also do piercing dmg
         If (eachpick.tagis[wType.P] = 0) Then
            eachpick.field[wAttBonus].value += field[abValue].value
            ~ Set extra damage note to remind the only do half damage
            #extradamage[eachpick,sText,field[name].text]
            #situational[eachpick,"Non-Piercing weapons do half-damage underwater.",field[name].text]
         Endif
         ~ HL Can't display And/Or type damage
         If (eachpick.tagis[thingid.wMornStar] <> 0) Then
            eachpick.field[wAttBonus].value += field[abValue].value
            ~ Set extra damage note to remind the only do half damage
            #extradamage[eachpick,sText,field[name].text]
            #situational[eachpick,"Non-Piercing weapons do half-damage underwater.",field[name].text]
         Endif      
      nexteach]]></eval>
    </thing>
  <thing id="pS2Climbin" name="Climbing" description="{B}Climbing Speeds:{/b}\n40ft = 10ft climb per move action or 20ft for full round.\n30ft = 5ft climb per move action or 15ft for full round.\n20ft = 5ft climb per move action or 10ft for full round.\n\nWith a successful Climb check, you can advance up, down, or across a slope, wall, or other steep incline (or even across a ceiling, provided it has handholds) at one-quarter your normal speed. A slope is considered to be any incline at an angle measuring less than 60 degrees; a wall is any incline at an angle measuring 60 degrees or more. A Climb check that fails by 4 or less means that you make no progress, and one that fails by 5 or more means that you fall from whatever height you have already attained. The DC of the check depends on the conditions of the climb. Compare the task with those on the following table to determine an appropriate DC.\n\nYou need both hands free to climb, but you may cling to a wall with one hand while you cast a spell or take some other action that requires only one hand. While climbing, you can’t move to avoid a blow, so you lose your Dexterity bonus to AC (if any). You also can’t use a shield while climbing. Anytime you take damage while climbing, make a Climb check against the DC of the slope or wall. Failure means you fall from your current height and sustain the appropriate falling damage.\n\n{B}Note:{/b} This condition gives you the flat-footed condition and remvoes any shields you currently have equipped." compset="InPlay">
    <usesource source="srcS2Adjus"/>
    <tag group="Helper" tag="CoreCampOK"/>
    <tag group="Helper" tag="AdjState"/>
    <eval phase="PreLevel" priority="10000" index="2">~ If not activated get out now
      doneif (field[pIsOn].value = 0)

      ~ Remove all shields
      Call S2RmvShld</eval>
    <eval phase="First">~ If not activated get out now
      doneif (field[pIsOn].value = 0)
      ~ Set Flat Footed on
      perform hero.assign[Condition.pcnFlatFt]</eval>
    </thing>


</document>